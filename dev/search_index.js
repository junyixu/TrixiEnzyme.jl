var documenterSearchIndex = {"docs":
[{"location":"anotherPage.html#The-TrixiEnzyme-Module","page":"An other page","title":"The TrixiEnzyme Module","text":"","category":"section"},{"location":"anotherPage.html","page":"An other page","title":"An other page","text":"TrixiEnzyme","category":"page"},{"location":"anotherPage.html#TrixiEnzyme","page":"An other page","title":"TrixiEnzyme","text":"TrixiEnzyme\n\nTrixiEnzyme.jl is a component package of the Trixi.jl ecosystem and integrates Trixi.jl with Compiler-Based (LLVM level) automatic differentiation via Enzyme.jl for hyperbolic partial differential equations (PDEs). The integration of Trixi.jl with Compiler-Based (LLVM level) automatic differentiation via Enzyme.jl offers the following benefits: facilitates rapid forward mode AD, enables reverse mode AD, supports cross-language AD, and critically, supports mutating operations and caching, on which Trixi.jl relies, to enhance the performance of both simulation runs and AD. The final deliverable will include as many of Trixi's advanced features as possible, such as adaptive mesh refinement, shock capturing, etc., showcasing the benefits of differentiable programming in Julia's ecosystem.\n\n\n\n\n\n","category":"module"},{"location":"anotherPage.html#Module-Index","page":"An other page","title":"Module Index","text":"","category":"section"},{"location":"anotherPage.html","page":"An other page","title":"An other page","text":"Modules = [TrixiEnzyme]\nOrder   = [:constant, :type, :function, :macro]","category":"page"},{"location":"anotherPage.html#Detailed-API","page":"An other page","title":"Detailed API","text":"","category":"section"},{"location":"anotherPage.html","page":"An other page","title":"An other page","text":"Modules = [TrixiEnzyme]\nOrder   = [:constant, :type, :function, :macro]","category":"page"},{"location":"anotherPage.html#TrixiEnzyme.plusTwo-Tuple{Any}","page":"An other page","title":"TrixiEnzyme.plusTwo","text":"plusTwo(x)\n\nSum the numeric \"2\" to whatever it receives as input\n\nA more detailed explanation can go here, although I guess it is not needed in this case\n\nArguments\n\nx: The amount to which we want to add 2\n\nNotes\n\nNotes can go here\n\nExamples\n\njulia> five = plusTwo(3)\n5\n\n\n\n\n\n","category":"method"},{"location":"Acknowledgments.html#Acknowledgments","page":"Acknowledgments","title":"Acknowledgments","text":"","category":"section"},{"location":"Acknowledgments.html","page":"Acknowledgments","title":"Acknowledgments","text":"The entire project, along with this blog website, is developed and maintained by Junyi(@junyixu). The whole project is under the guidance of two outstanding professors, Michael(@sloede) and Hendrik(@ranocha), from Trixi Framework community.","category":"page"},{"location":"Acknowledgments.html","page":"Acknowledgments","title":"Acknowledgments","text":"The project also received support from other Julia contributors, including Benedict from Trixi Framework community.","category":"page"},{"location":"index.html#TrixiEnzyme.jl","page":"Index","title":"TrixiEnzyme.jl","text":"","category":"section"},{"location":"index.html","page":"Index","title":"Index","text":"Documentation for TrixiEnzyme.jl","category":"page"},{"location":"Contact.html#Contact-Developer","page":"Contact Developer","title":"Contact Developer","text":"","category":"section"},{"location":"Contact.html","page":"Contact Developer","title":"Contact Developer","text":"If you have questions, suggestions, or are interested in contributing, feel free to reach out our developer, Huiyu, via email at junyixu0@gmail.com.","category":"page"}]
}
